#!/usr/bin/env python3
import sys
import gi
import time
import datetime
import os

gi.require_version("Tcam", "0.1")
gi.require_version("Gst", "1.0")

from gi.repository import Tcam, Gst

def main():
	Gst.init(sys.argv)
	
	pipeline = Gst.Pipeline.new()
	
	filmDuration = 10;
	currentTime = datetime.datetime.now().strftime("%d-%m-%Y_%H:%M:%S")
	os.makedirs("../Frames/" + currentTime)
	
	pipeline = Gst.parse_launch('tcamsrc num-buffers=' + str((filmDuration * 30)) +' serial=4810628 '
				+ '! video/x-bayer,format=bggr,width=1024,height=768,framerate=30/1 '
				+ '! tcamautoexposure '
				+ '! tcamwhitebalance '
				+ '! tcamautofocus '				
				+ '! capssetter join=false caps="video/x-bayer,format=gbrg" '
				+ '! bayer2rgb '
				+ '! clockoverlay time-format="%d/%m/%Y %H:%M:%S" text="Hessdalen " valignment=bottom shaded-background=true font-desc="sans, 8" '
				+ '! tee name=t t. '
				+ '! queue '
				+ '! videoscale '
				+ '! video/x-raw,framerate=30/1 '
				+ '! videoconvert '
				+ '! omxh264enc '
				+ '! mp4mux '
				+ '! filesink location=../Videoer/' + currentTime + '.mp4 t. '
				+ '! queue '
				+ '! videorate '
				+ '! video/x-raw,framerate=1/1 '
				+ '! videoconvert '
				+ '! jpegenc '
				+ '! multifilesink location=../Frames/' + currentTime + '/%04d.jpg ')

	pipeline.set_state(Gst.State.PLAYING)
	
	time.sleep(filmDuration + 0.2)

	pipeline.set_state(Gst.State.NULL)

if __name__ == "__main__":
	main()
