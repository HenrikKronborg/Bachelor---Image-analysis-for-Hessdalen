#!/usr/bin/env python3
import sys
import gi
import time
import datetime

gi.require_version("Tcam", "0.1")
gi.require_version("Gst", "1.0")

from gi.repository import Tcam, Gst

def main():
	Gst.init(sys.argv)
	
	pipeline = Gst.Pipeline.new()
	
	pipeline = Gst.parse_launch('tcamsrc num-buffers=60 serial=4810628 '
				+ '! video/x-bayer,format=bggr,width=1024,height=768,framerate=30/1 '
				+ '! tcamautoexposure '
				+ '! tcamwhitebalance '
				+ '! tcamautofocus '
				+ '! capssetter join=false caps="video/x-bayer,format=gbrg" '
				+ '! bayer2rgb '
				+ '! videoconvert '
				+ '! x264enc bitrate=512 '
				+ '! mp4mux '
				+ '! filesink location=test.mp4')

	pipeline.set_state(Gst.State.PLAYING)
	
	time.sleep(10)

	pipeline.set_state(Gst.State.NULL)
	
def save_image(pipeline):
	sink = pipeline.get_by_name("sink")
	sample = sink.get_property("last-sample")
	print(sink)
	print(sample)	

	filename = "bilder/" + datetime.datetime.now().strftime("%d-%m-%Y-%H:%M:%S") + ".jpg"
	buffer = sample.get_buffer()
	
	pipeline = Gst.parse_launch("appsrc name=src ! videoconvert ! jpegenc ! filesink location=%s" % filename)
	src = pipeline.get_by_name("src")
	src.set_property("caps", sample.get_caps())
	pipeline.set_state(Gst.State.PLAYING)
	src.emit("push-buffer", buffer)
	src.emit("end-of-stream")
	pipeline.get_state(Gst.CLOCK_TIME_NONE)
	pipeline.set_state(Gst.State.NULL)
	pipeline.get_state(Gst.CLOCK_TIME_NONE)

if __name__ == "__main__":
	main()
